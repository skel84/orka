name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Lint & Format (ubuntu)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: cargo fmt
        run: cargo fmt --all --check
      - name: cargo clippy
        run: cargo clippy --workspace --all-targets -- -D warnings

  test:
    name: Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: cargo test
        run: cargo test --workspace --all-targets

  build-cli:
    name: Build CLI (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: [check, test]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Build orkactl (release)
        run: cargo build -p orkactl --release
      - name: Package artifact
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            out=orkactl-windows-${{ runner.arch }}.zip
            7z a "$out" target/release/orkactl.exe > /dev/null
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            out=orkactl-macos-${{ runner.arch }}.tar.gz
            tar czf "$out" -C target/release orkactl
          else
            out=orkactl-linux-${{ runner.arch }}.tar.gz
            tar czf "$out" -C target/release orkactl
          fi
          echo "out=$out" >> $GITHUB_OUTPUT
        id: pkg
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.pkg.outputs.out }}
          path: ${{ steps.pkg.outputs.out }}
